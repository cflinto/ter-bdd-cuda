1/100_static;1-100000_static;1/100_dynamic;1-100000_dynamic;1/100_guided;1-100000_guided
0.570532;0.229639;0.163599;0.136429;0.132265;0.0492439
0.156157;0.138554;0.128377;0.13477;0.362984;0.30948
0.343055;0.155513;0.315305;0.33268;0.365257;0.285064
0.0886993;0.0906477;0.160779;0.1543;0.168729;0.167981
0.157908;0.151829;0.300277;0.161863;0.144931;0.0754355
0.315678;0.117239;0.110273;0.18397;0.31102;0.334432
0.356389;0.167005;0.356886;0.151035;0.338642;0.347918
0.302714;0.110175;0.152135;0.142619;0.340354;0.130577
0.355908;0.296698;0.219118;0.14642;0.221965;0.255524
0.313309;0.301017;0.150051;0.347894;0.157811;0.154389
0.0686733;0.172088;0.115256;0.167951;0.159908;0.265892
0.161582;0.107351;0.271682;0.180858;0.166401;0.19166
0.358988;0.184487;0.337841;0.145205;0.325392;0.183182
0.180287;0.155566;0.174251;0.154431;0.328819;0.133981
0.373132;0.115564;0.280529;0.155746;0.464922;0.172614
0.374715;0.320926;0.14956;0.190913;0.37294;0.134999
0.168377;0.157213;0.332618;0.14592;0.369097;0.15706
0.301527;0.187676;0.355866;0.143081;0.164399;0.264779
0.16348;0.098458;0.353738;0.150471;0.311463;0.190721
0.198425;0.177072;0.191407;0.355602;0.281946;0.282066
0.31925;0.344336;0.314343;0.309752;0.312718;0.152048
0.148742;0.285412;0.128377;0.29729;0.161064;0.239265
0.257025;0.26557;0.105824;0.184458;0.287613;0.114029
0.347608;0.179613;0.17953;0.166898;0.375356;0.182546
0.354668;0.175526;0.350282;0.183743;0.20338;0.192915
0.185066;0.176044;0.35621;0.191258;0.36372;0.158028
0.341819;0.340927;0.342743;0.170565;0.259637;0.191016
0.379203;0.271957;0.18266;0.156128;0.365241;0.140768
0.357266;0.18377;0.357331;0.173877;0.296824;0.335973
0.352961;0.154234;0.301512;0.141191;0.335038;0.0939325
0.37561;0.148903;0.30946;0.252939;0.474351;0.147236
0.230459;0.184097;0.18013;0.199602;0.371192;0.131567
0.329785;0.174327;0.484764;0.351763;0.35151;0.199249
0.202642;0.163726;0.315118;0.171953;0.470497;0.34614
0.283605;0.161061;0.178288;0.199124;0.341038;0.173614
0.356025;0.173055;0.204074;0.318461;0.171303;0.152734
0.342341;0.149462;0.169755;0.183593;0.174549;0.141265
0.191647;0.172329;0.190883;0.18045;0.343541;0.166305
0.297968;0.311745;0.180772;0.186714;0.35965;0.178355
0.357649;0.170474;0.19161;0.334744;0.180931;0.353792
0.169691;0.193409;0.184105;0.178442;0.361665;0.164989
0.180969;0.192299;0.366668;0.150723;0.360283;0.323187
0.333257;0.328791;0.334359;0.179465;0.349867;0.171185
0.341667;0.338843;0.193778;0.176291;0.194603;0.186139
0.176705;0.294434;0.334853;0.340878;0.163429;0.186379
0.332745;0.324373;0.173173;0.175676;0.208851;0.334031
0.30735;0.15254;0.310419;0.283862;0.31082;0.168623
0.351068;0.133893;0.184452;0.20115;0.346828;0.173513
0.284837;0.268484;0.155194;0.174812;0.291905;0.126817
0.357733;0.17441;0.194663;0.166748;0.290169;0.153109

used command : ./bdd-cuda -n 10000100 -s static -x 100000 -m 1/100 -t -l compare_exchange
or : ./bdd-cuda -n 10000100 -s static -x 100000 -t -m 1-100000 -l compare_exchange

3 columns

lscpu
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                8
On-line CPU(s) list:   0-7
Thread(s) per core:    2
Core(s) per socket:    4
Socket(s):             1
NUMA node(s):          1
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 62
Stepping:              4
CPU MHz:               2500.000
BogoMIPS:              5000.00
Hypervisor vendor:     KVM
Virtualization type:   full
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              30720K
NUMA node0 CPU(s):     0-7

echo '1/100_static;1-100000_static;1/100_dynamic;1-100000_dynamic;1/100_guided;1-100000_guided' > result.csv
for i in {1..50}
do
    ./bdd-cuda -n 10000100 -s static -x 100000 -m 1/100 -t -l compare_exchange >> result.csv
    sleep .1
    echo -n ';' >> result.csv
    ./bdd-cuda -n 10000100 -s static -x 100000 -t -m 1-100000 -l compare_exchange >> result.csv
    sleep .1
    echo -n ';' >> result.csv
    ./bdd-cuda -n 10000100 -s dynamic -x 100000 -m 1/100 -t -l compare_exchange >> result.csv
    sleep .1
    echo -n ';' >> result.csv
    ./bdd-cuda -n 10000100 -s dynamic -x 100000 -t -m 1-100000 -l compare_exchange >> result.csv
    sleep .1
    echo -n ';' >> result.csv
    ./bdd-cuda -n 10000100 -s guided -x 100000 -m 1/100 -t -l compare_exchange >> result.csv
    sleep .1
    echo -n ';' >> result.csv
    ./bdd-cuda -n 10000100 -s guided -x 100000 -t -m 1-100000 -l compare_exchange >> result.csv
    sleep .1
    echo '' >> result.csv
done

