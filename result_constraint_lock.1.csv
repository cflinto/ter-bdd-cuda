low_none;low_omp_critical;low_compare_exchange;medium_none;medium_omp_critical;medium_compare_exchange;high_none;high_omp_critical;high_compare_exchange
2.01672;7.24114;2.75536;0.420121;0.275773;0.265998;0.177831;0.265365;0.259014
1.01016;3.25996;1.56494;0.434101;0.394792;0.527251;0.205033;0.259473;0.273294
1.29373;7.58935;1.25997;0.372385;0.248787;0.411954;0.325562;0.274047;0.234761
0.967166;7.43254;2.26001;0.436241;0.431347;0.361956;0.192681;0.106633;0.102193
0.715789;7.73999;1.66777;0.46281;0.445674;0.302753;0.313418;0.328901;0.298945
1.27894;5.75256;2.50062;0.498833;0.350415;0.367917;0.240687;0.145729;0.246213
1.97222;6.05515;1.28726;0.394679;0.45209;0.334848;0.26113;0.320826;0.142443
0.962562;3.40443;1.26902;0.45767;0.327611;0.474036;0.201222;0.0921089;0.282864
1.75429;7.49675;2.47527;0.314964;0.296467;0.402639;0.244557;0.256121;0.107004
1.31652;6.38895;2.27419;0.298608;0.350054;0.445741;0.239258;0.15757;0.0957023
1.58974;4.30567;1.70565;0.323355;0.319065;0.28536;0.326119;0.257052;0.138187
0.755757;6.3016;1.11764;0.376961;0.393408;0.283532;0.214605;0.285137;0.220684
1.08673;7.12954;2.78999;0.4438;0.344278;0.457831;0.133686;0.153126;0.316587
1.25171;3.38055;1.3709;0.538428;0.321149;0.4738;0.180846;0.161902;0.260529
1.52555;3.34615;0.863793;0.382256;0.320869;0.483537;0.193158;0.24968;0.195519
2.39496;3.50796;1.20824;0.40288;0.483466;0.317631;0.260985;0.274024;0.173013
2.04491;4.83205;2.55371;0.435988;0.411561;0.414465;0.354563;0.13937;0.294283
1.18427;4.69092;3.16904;0.387645;0.331258;0.306922;0.235198;0.174484;0.249215
1.7832;7.11812;2.37287;0.344931;0.431282;0.359833;0.279164;0.161256;0.328441
2.25755;6.29395;1.30633;0.448172;0.336772;0.29085;0.218929;0.237787;0.278794
1.44163;7.16955;2.13755;0.402842;0.334872;0.324011;0.0892063;0.255257;0.180892
2.65453;8.64551;2.93044;0.402329;0.407623;0.326726;0.113894;0.253478;0.171849
2.45101;5.50124;1.32735;0.31065;0.290992;0.259581;0.238867;0.24297;0.202077
1.47272;7.24078;1.4346;0.534268;0.545183;0.417356;0.164662;0.195425;0.172982
0.650702;3.47174;1.15154;0.265765;0.307095;0.570262;0.355366;0.197591;0.201599
0.975882;5.72073;1.2796;0.35561;0.335482;0.351299;0.24196;0.247694;0.163391
1.30097;2.57457;0.866224;0.428294;0.450304;0.417574;0.264432;0.231755;0.213558
3.27736;15.9733;3.7458;1.56882;1.77186;1.57132;1.18156;1.16143;1.17807
4.9573;14.3693;6.73207;1.93842;1.75185;2.12838;1.15146;1.5453;1.40187
3.53017;12.3342;6.94863;1.56664;1.94516;2.15576;1.13634;1.35218;1.19909

used command : ./bdd-cuda -n 20000000 -t -m constaint_XXX -l LLLOCK

7 columns

lscpu
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                8
On-line CPU(s) list:   0-7
Thread(s) per core:    2
Core(s) per socket:    4
Socket(s):             1
NUMA node(s):          1
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 62
Stepping:              4
CPU MHz:               2500.000
BogoMIPS:              5000.00
Hypervisor vendor:     KVM
Virtualization type:   full
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              30720K
NUMA node0 CPU(s):     0-7

echo 'low_none;low_omp_critical;low_compare_exchange;medium_none;medium_omp_critical;medium_compare_exchange;high_none;high_omp_critical;high_compare_exchange' > result.csv
for i in {1..30}
do
    ./bdd-cuda -n 20000000 -t -m constaint_low -l none >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_low -l omp_critical >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_low -l compare_exchange >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_medium -l none >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_medium -l omp_critical >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_medium -l compare_exchange >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_high -l none >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_high -l omp_critical >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    ./bdd-cuda -n 20000000 -t -m constaint_high -l compare_exchange >> result.csv
    sleep .5
    echo -n ';' >> result.csv
    echo '' >> result.csv
done
